RabbitMQ — це брокер повідомлень із відкритим вихідним кодом, який реалізує протокол черги повідомлень, 
здатний обмінюватися повідомленнями між видавцями та слухачами між різними каналами та маршрутами.

Серед основних функцій RabbitMQ знайдіть деякі важливі нижче з коротким поясненням

Message: повідомлення є ключовою частиною спілкування RabbitMQ. 
Він рухається по каналах, від видавця до слухачів, і може мати будь-яку інформацію, 
від простого тексту до складних об’єктів, серіалізованих.

Channel: канал — це логічна лінія зв’язку між видавцем і слухачами. 
Він стоїть на існуючому з'єднанні та може передавати повідомлення через різні протоколи.

Queue: Черга RabbitMQ працює за шаблоном FIFO для зберігання повідомлень між видавцями та слухачами.

Connection: з’єднання RabbitMQ базується на протоколах, є основою для роботи каналів і, 
як сказано в його назві, з’єднує сервер із клієнтом.

Consumer: клієнт RabbitMQ, підключений до каналу, який прослуховує його черги, щоб читати опубліковані на ньому повідомлення.

Publisher: клієнт RabbitMQ, підключений до черги публікації повідомлень.

Notification: сповіщення пов’язані з моніторингом працездатності служби та можуть бути налаштовані 
для попередження на основі показників.

Dead letter: у RabbitMQ мертві листи використовуються для зберігання повідомлень, які не змогли прочитати їх слухачі. 
Його можна не прочитати через те, що повідомлення було відхилено слухачами, або тому, 
що черга була заповнена, або через час закінчення терміну дії повідомлення.

Route: маршрути RabbitMQ відповідають за надсилання повідомлень у правильні черги на основі їхніх ключів маршрутизації та обмінів.

Virtual Host: у порівнянні з базою даних SQL Server, віртуальний хост RabbitMQ буде базою даних SQL Server. 
Віртуальні хости мають власні налаштування та не залежать від інших віртуальних хостів, 
вони мають власні канали, прив’язки, протоколи, користувачів тощо.

Exchange: обмін RabbitMQ відповідає за маршрутизацію повідомлень до своїх черг на основі їх атрибутів.

Bindings: прив’язка RabbitMQ працює як посилання з черги на біржу.

Основні переваги використання RabbitMQ:

- Мультиплатформенний зв’язок із серіалізацією/десеріалізацією повідомлень на поширених мовах, таких як JSON;
- Асинхронні операції, не залишаючи служби заблокованими в очікуванні відповіді;
- З відкритим вихідним кодом, велика спільнота щодня працює над покращенням його функцій;
- Багатомовність із широким діапазоном прийнятних мов;
- Мультипротокольний, з різними типами протоколів, що використовуються для обміну повідомленнями.

Завантажити:

RabbitMQ Server and Erland(required for RabbitMQ)
https://www.rabbitmq.com/download.html
RabbitMQ client for .Net
https://www.rabbitmq.com/dotnet.html 
https://www.nuget.org/packages/RabbitMQ.Client/ 

Дефолтна RabbitMQ конфiгурацiя:

Endpoint address: http://localhost:15672/
Login: guest
Password: guest 
Windows Service Name: RabbitMQ
Windows menu item to start the service: RabbitMQ Service - start

Старт:

1. docker run -it --rm --name rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:3.13-management

2. http://localhost:15672/#/

3.
login: guest
password: guest