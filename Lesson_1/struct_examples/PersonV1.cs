// Поряд із класами структури представляють ще один спосіб створення власних типів даних у C#. 
// Більше того, багато примітивних типів, наприклад, int, double і т.д., по суті є структурами.

// Визначення структури
// struct ім'я_структури
// {
//    // Елементи структури
// }

// Як і класи, структури можуть зберігати стан як полів (змінних) і визначати поведінка як методів.
// Наприклад, додамо в структуру Person пару полів та метод:

// В даному випадку визначено дві змінні - name і age для зберігання відповідно
// імені та віку людини та метод Print для виведення інформації про людину на консоль.
struct PersonV1
{
    public string name = "no name";
    // Ініціалізація полів за промовчанням
    // Починаючи з версії C# 10, ми можемо безпосередньо
    // ініціалізувати поля структури при їх визначенні (до C# 10 це робити було не можна):
    public int age = 18;
    // Однак навіть у цьому випадку, незважаючи на значення за замовчуванням,
    // необхідно явно визначити та викликати конструктор, якщо ми хочемо використовувати ці значення.
    public PersonV1() { }

    public PersonV1(string name = "Tom", int age = 1)
    {
        this.name = name;
        this.age = age;
    }

    public void Print()
    {
        Console.WriteLine($"Name: {name}  Age: {age}");
    }
}
