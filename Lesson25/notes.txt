Паттерн MVC
Написання прикладу на ASP.NET Core MVC.
Додавання бази данних
Code-first approach
Entity Framework Core

https://learn.microsoft.com/en-us/aspnet/core/data/ef-mvc/complex-data-model?view=aspnetcore-7.0
https://github.com/dotnet/AspNetCore.Docs/tree/main/aspnetcore/data/ef-mvc/intro/samples/cu-final

Доробити інтернет-магазин, перевірити всі функції.
Все зберегти в базі даних, використовуючи code-first підхід за допомогою Entity Framework Core. У разі змін робити оновлення бази даних через міграцію.

Завдання 1: 
Створіть базовий додаток ASP.NET Core, побудований на основі ASP.NET Razor Pages.
Створіть додаткову вебсторінку.
Відобразіть на ній розклад показів фільмів у кінотеатрі вашого міста.
Інформація, яку потрібно зберігати:

назва фільму;
режисер;
стиль;
короткий опис;
список сеансів.
Відобразіть назву фільму і список його сеансів.

Завдання 2:
Для першого завдання виділіть класи для роботи з фільмами та списком сеансів в окремі проєкти.
Наприклад, один проєкт для зберігання класів фільму, стилю фільму і т. д.
Другий проєкт для створення масиву фільмів та шару для доступу до цього масиву.
Зверніть увагу, що потім масив фільмів може замінитися на інше джерело даних.
Обов'язково враховуйте цю можливість при проєктуванні.

Завдання 3: 
Підключіть проєкти з другого завдання до вебдодатка для відображення даних.
Додайте код до вебдодатка для використання даних.

Завдання 4:
Додайте до третього завдання можливості роутингу.
При натисканні на фільм відобразіть повну інформацію, а також список сеансів.

Завдання 5: 
Додайте до четвертого завдання можливість повернення на сторінку з усіма фільмами та їх сеансами.

Додатково:

Завдання 1: 
Додайте до вашого проєкту кінотеатру можливість пошуку даних.
Необхідно шукати за:

назвою фільму;
режисер;
стилем;
коротким описом;
списком сеансів.
Шукати потрібно, як у частині, так і за повною назвою.

Після пошуку надайте можливість користувачу відображати всі сеанси у кінотеатрі.

Завдання 2: 
Додайте до вашого проєкту кінотеатру можливість редагування даних.
Редагування даних здійснюється через форму.
Поля форми мають бути заповнені інформацією про фільм.
Після успішного редагування потрібно показати усі сеанси в кінотеатрі.

Завдання 3: 
Додайте до вашого проєкту кінотеатру можливість додавання даних.
Додавання даних здійснюється через форму.
Після успішного додавання потрібно показати усі сеанси в кінотеатрі.

Завдання 4: 
Додайте до вашого проєкту кінотеатру можливість видалення даних.
Перед видаленням потрібно уточнювати у користувача, чи він хоче виконати операцію.
Після успішного видалення потрібно показати усі сеанси в кінотеатрі.